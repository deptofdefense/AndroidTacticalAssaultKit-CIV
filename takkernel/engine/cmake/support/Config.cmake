# This support script covers standard configuration required across multiple CMake projects in the map engine build.
# The configuration is handled here to minimize duplication of code across CMake scripts.

# Enforce the use of C99 as a baseline standard.
set(CMAKE_C_STANDARD 99)
set(CMAKE_C_STANDARD_REQUIRED ON)

# Enforce the use of C++11.
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Restrict build configurations to Debug and Release builds for multi-configuration generators (i.e. Visual Studio generators).
set(CMAKE_CONFIGURATION_TYPES Debug Release)

# Set the installation directory for all install() commands. This is generally intended to be a prefix, but in
# this case all artifacts should be installed to the same location so we provide the full path.
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    if(WIN32)
        set(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/../engine/build/jniLibs/win64)
    elseif(ANDROID)
        set(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/../engine/build/jniLibs/${ANDROID_ABI})
    elseif(APPLE)
        set(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/../engine/build/jniLibs/macos64)
    elseif(UNIX)
        set(CMAKE_INSTALL_PREFIX ${CMAKE_SOURCE_DIR}/../engine/build/jniLibs/linux64)
    endif()
endif()

if(WIN32)
    set(EXPORT_INSTALL_SUBDIR win64/${CMAKE_BUILD_TYPE})
elseif(ANDROID)
    set(EXPORT_INSTALL_SUBDIR android-${ANDROID_ABI}/${CMAKE_BUILD_TYPE})
elseif(APPLE)
    set(EXPORT_INSTALL_SUBDIR macos64/${CMAKE_BUILD_TYPE})
elseif(UNIX)
    set(EXPORT_INSTALL_SUBDIR linux64/${CMAKE_BUILD_TYPE})
endif()

# Remove the WIN32 and _WINDOWS definitions that get generated by CMake by default. These definitions used to come standard
# in VS project files, but no longer do. Note that we normally shouldn't be touching compiler flags directly like this,
# however this is the only available workaround at the moment. See the open CMake ticket for this issue:
# https://gitlab.kitware.com/cmake/cmake/-/issues/17967
if(WIN32)
    get_property(PROJECT_ENABLED_LANGUAGES GLOBAL PROPERTY ENABLED_LANGUAGES)
    if(CXX IN_LIST PROJECT_ENABLED_LANGUAGES)
        string(REPLACE "/DWIN32" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
        string(REPLACE "/D_WINDOWS" "" CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS})
    endif()
endif()
