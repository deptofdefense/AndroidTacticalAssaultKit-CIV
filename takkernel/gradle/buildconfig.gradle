if (isJavaKernelBuild) {
    apply plugin: 'java-library' // apply the Java plugin

    sourceSets {
        main {
            // add default location for java specific sourceset
            java.srcDirs 'src/jre/java'
        }
        test {
            // add default location for
            java.srcDirs 'src/jniTest/java'
            // add default location for java specific sourceset
            java.srcDirs 'src/jreTest/java'
        }
    }

    test {
        useJUnit()
        maxHeapSize = '1G'
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.java.srcDirs
    }
} else if (isAndroidKernelBuild) {
    apply plugin: 'com.android.library' // apply the Android plugin

    // basic android library configuration
    android {
        compileSdkVersion project.androidCompileSdkVersion
        buildToolsVersion project.androidBuildToolsVersion

        buildTypes {
            debug {}
            release {}
        }

        defaultConfig {
            targetSdkVersion project.androidTargetSdkVersion
            compileSdkVersion project.androidCompileSdkVersion
            minSdkVersion project.androidMinSdkVersion
            ndk {
                ndkVersion "${androidNdkVersion}"
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
            }

            versionCode project.versionCode
            versionName "${project.version}"

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        // create a default manifest
        def manifestFile = project.file('src/android/AndroidManifest.xml')

        if (!manifestFile.exists()) {
            manifestFile.getParentFile().mkdirs()
            manifestFile.text = """
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
          package="gov.tak.kernel.${project.name}" >
</manifest>
"""
        }

        // note that `sourceSets` closure is _within_ the `android` closure for Android builds
        sourceSets {
            main {
                // specify the manifest
                manifest.srcFile 'src/android/AndroidManifest.xml'
                // add default location for android specific sourceset
                java.srcDirs 'src/android/java'
                // add default location for android JNI libs (shared across all build types)
                jniLibs.srcDirs 'src/android/jniLibs'
                // add default location for JNI sources (distinguished from C++ library sources)
                jni.srcDirs 'src/main/jni'
            }
            test {
                java.srcDirs 'src/main/test'
            }
            androidTest {
                // add default location for java specific sourceset
                java.srcDirs 'src/jniTest/java'
            }
        }
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }
}

apply plugin: 'org.owasp.dependencycheck'

// Customize our archive basename, which defines the resulting publication artifactId
project.archivesBaseName = "${rootProject.name}-${project.name}"

dependencies {
    // Use JUnit test framework
    testImplementation("junit:junit:${junitVersion}")
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"

    // apply dependencies for Android instrumented tests
    if(isAndroidKernelBuild) {
        androidTestImplementation 'androidx.test:runner:1.4.0'
        androidTestImplementation 'androidx.test:rules:1.4.0'
        androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'
        androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
        androidTestImplementation 'androidx.test.espresso:espresso-intents:3.4.0'
        androidTestImplementation 'androidx.test.ext:junit:1.1.3'

        androidTestImplementation "org.mockito:mockito-core:3.12.4"
        androidTestImplementation 'org.powermock:powermock-module-junit4:2.0.2'
        androidTestImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
        androidTestImplementation 'org.powermock:powermock-core:2.0.2'
        androidTestImplementation 'org.powermock:powermock-module-junit4-rule:2.0.2'
    }
}

// configure the build dir for the kernel build target (e.g. `build/android` or `build/java`)
project.buildDir = new File(buildDir, kernelBuildTarget)
