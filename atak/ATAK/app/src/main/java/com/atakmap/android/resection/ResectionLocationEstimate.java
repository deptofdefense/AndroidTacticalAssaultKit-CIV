/*
 * Copyright 2020 PAR Government Systems
 *
 *  Unlimited Rights:
 *  PAR Government retains ownership rights to this software.  The Government has Unlimited Rights
 *  to use, modify, reproduce, release, perform, display, or disclose this
 *  software as identified in the purchase order contract. Any
 *  reproduction of computer software or portions thereof marked with this
 *  legend must also reproduce the markings. Any person who has been provided
 *  access to this software must be aware of the above restrictions.
 */
package com.atakmap.android.resection;

import com.atakmap.coremap.maps.coords.GeoPoint;

/**
 * Represents a location estimate that was generated by a resectioning or GPS-denied navigation
 * tool/aid.
 */
public class ResectionLocationEstimate {
    private String source = "Unknown";
    private GeoPoint point;
    private double confidence = Double.MIN_VALUE;

    /**
     * Gets the name of the source of this location estimate.
     * @return Name of the source
     */
    public String getSource() {
        return source;
    }

    /**
     * Sets the name of the source that produced this estimate
     * @param name Name of the source
     */
    public void setSource(String name) {
        source = name;
    }

    /**
     * Gets the center point location of the estimate.
     * @return Location of the estimate.
     */
    public GeoPoint getPoint() {
        return point;
    }

    /**
     * Sets the center point location of the estimate.
     * @param point Location of the estimate
     */
    public void setPoint(GeoPoint point) {
        this.point = point;
    }

    /**
     * Gets the confidence of the location estimate.
     * @return Legal values are 0 - 1.0, with Double.MIN_VALUE indicating that no confidence
     * assessment has been performed.
     */
    public double getConfidence() {
        return confidence;
    }

    /**
     * Sets the confidence of the location estimate.
     * @param confidence Legal values are 0 - 1.0, with Double.MIN_VALUE indicating that no
     *                   confidence assessment has been performed.
     */
    public void setConfidence(double confidence) {
        this.confidence = confidence;
    }

    // TODO: Add some method for communicating the bounds -- circle, square, etc.
}
