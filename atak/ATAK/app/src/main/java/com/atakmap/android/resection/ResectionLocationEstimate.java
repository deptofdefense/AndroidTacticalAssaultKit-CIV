
package com.atakmap.android.resection;

import com.atakmap.coremap.maps.coords.GeoPoint;
import com.atakmap.android.maps.Shape;

/**
 * Represents a location estimate that was generated by a resectioning or GPS-denied navigation
 * tool/aid.
 */
public class ResectionLocationEstimate {
    private static final String TAG = "ResectionLocationEstimate";

    private String source = "Unknown";
    private GeoPoint point;
    private double confidence = Double.MIN_VALUE;
    private Shape errorBounds = null;

    /**
     * Gets the name of the source of this location estimate.
     * 
     * @return Name of the source
     */
    public String getSource() {
        return source;
    }

    /**
     * Sets the name of the source that produced this estimate
     * 
     * @param name Name of the source
     */
    public void setSource(String name) {
        source = name;
    }

    /**
     * Gets the center point location of the estimate.
     * 
     * @return Location of the estimate.
     */
    public GeoPoint getPoint() {
        return point;
    }

    /**
     * Sets the center point location of the estimate.
     * 
     * @param point Location of the estimate
     */
    public void setPoint(GeoPoint point) {
        this.point = point;
    }

    /**
     * Gets the confidence of the location estimate.
     * 
     * @return The confidence level, with Double.MIN_VALUE indicating that no confidence assessment
     *         has been performed.
     */
    public double getConfidence() {
        return confidence;
    }

    /**
     * Sets the confidence of the location estimate.
     * 
     * @param confidence Double.MIN_VALUE indicates that no confidence assessment has been
     *            performed.
     */
    public void setConfidence(double confidence) {
        this.confidence = confidence;
    }

    /**
     * Gets the error bounds of the location estimate.
     * 
     * @return An ErrorBoundsDrawable, with NULL indicating that no error bounds assessment has been
     *         performed.
     */
    public Shape getErrorBounds() {
        return errorBounds;
    }

    /**
     * Sets the error bounds of the location estimate.
     * 
     * @param errorBounds NULL indicates that no error bounds assessment has been performed.
     */
    public void setErrorBounds(Shape errorBounds) {
        this.errorBounds = errorBounds;
    }
}
